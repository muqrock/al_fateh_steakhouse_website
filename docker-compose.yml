version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile # Explicitly specify Dockerfile for clarity
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www  # Mounts your entire project for live code changes
      # REMOVED: - /var/www/storage and - /var/www/bootstrap/cache
      # This allows the host's storage/cache directories to be used,
      # and permissions should be handled by your entrypoint.sh script.
    environment:
      # Change these for local development:
      - APP_ENV=local   # Use 'local' for development
      - APP_DEBUG=true  # Enable debugging for local development
      # Your existing database variables (keep these as they are):
      - DB_CONNECTION=pgsql
      - DB_HOST=aws-0-ap-southeast-1.pooler.supabase.com
      - DB_PORT=5432
      - DB_DATABASE=postgres
      - DB_USERNAME=postgres.knurdrijfqfrbhdcnpak
      - DB_PASSWORD=1234
    # ports:
    #   - "9000:9000" # Typically not needed as Nginx proxies to PHP-FPM
    networks:
      - laravel_network
    healthcheck:
      # More appropriate healthcheck for a PHP-FPM container:
      test: ["CMD-SHELL", "pgrep -f 'php-fpm' > /dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Give the app time to fully start before checks begin

  webserver:
    image: nginx:alpine
    container_name: laravel_webserver
    restart: unless-stopped
    ports:
      - "8080:80" # Map host port 8080 to Nginx's port 80
    volumes:
      - .:/var/www # Mount the entire app for Nginx to serve static assets and proxy PHP
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_healthy # Wait for app to be healthy
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge